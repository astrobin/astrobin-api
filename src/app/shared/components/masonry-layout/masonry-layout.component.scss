@import "../../../styles/breakpoints";

.masonry-container {
  display: grid;
  grid-template-columns: repeat(var(--columns-xs, 2), 1fr);
  grid-gap: var(--gutter);
  grid-auto-rows: 0;
  width: 100%;
  contain: paint layout;
  content-visibility: auto;

  @media (min-width: $sm-min) {
    grid-template-columns: repeat(var(--columns-sm, 3), 1fr);
  }

  @media (min-width: $md-min) {
    grid-template-columns: repeat(var(--columns-md, 4), 1fr);
  }

  @media (min-width: $lg-min) {
    grid-template-columns: repeat(var(--columns-lg, 5), 1fr);
  }

  @media (min-width: $xl-min) {
    grid-template-columns: repeat(var(--columns-xl, 6), 1fr);
  }
}

.masonry-item {
  width: 100%;
  break-inside: avoid;
  opacity: 0;
  transition: opacity .25s ease-in-out;
  will-change: opacity, transform;
  overflow: hidden;

  &:not(.ready) {
    pointer-events: none;
    position: absolute;
    height: 0;
    width: calc(100% / var(--columns-xs, 2) - var(--gutter));

    @media (min-width: $sm-min) {
      width: calc(100% / var(--columns-sm, 3) - var(--gutter));
    }

    @media (min-width: $md-min) {
      width: calc(100% / var(--columns-md, 4) - var(--gutter));
    }

    @media (min-width: $lg-min) {
      width: calc(100% / var(--columns-lg, 5) - var(--gutter));
    }

    @media (min-width: $xl-min) {
      width: calc(100% / var(--columns-xl, 6) - var(--gutter));
    }
  }

  &.ready {
    opacity: 1;
  }
}
