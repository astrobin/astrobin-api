@import "src/app/styles/breakpoints";
@import "src/app/styles/mixins";

$portraitLayoutBreakpoint: $md-max;
$maxAspectRatio: 1/1;
$globalLoadingIndicatorHeight: 6px;

@mixin clickableMetadata {
  color: var(--lightestGrey);
  cursor: pointer;
  text-decoration: underline;
  text-decoration-color: var(--lightGrey);
  text-decoration-thickness: 1px;
  text-underline-offset: 4px;

  &:hover {
    color: var(--accentColor);
    text-decoration-color: var(--accentColor);
  }
}

:host {
  ::ng-deep {
    .metadata-striped {
      padding: .75rem 0;

      & > * {
        display: block;

        @media (min-width: $lg-min) {
          &:first-child {
            .metadata-section {
              border-top-left-radius: .25rem;
              border-top-right-radius: .25rem;
            }
          }

          &:last-child {
            .metadata-section {
              border-bottom-left-radius: .25rem;
              border-bottom-right-radius: .25rem;
            }
          }
        }

        &:nth-child(odd) {
          .metadata-section {
            background: rgba(0, 0, 0, .075);
          }
        }

        &:nth-child(even) {
          .metadata-section {
            background: rgba(255, 255, 255, .025);
          }
        }

        &:only-child {
          @media (min-width: $lg-min) {
            .metadata-section {
              border-radius: .25rem;
            }
          }

          .metadata-section {
            background: none;
          }
        }

        .metadata-section {
          padding-left: 1rem;
          padding-right: 1rem;
        }
      }
    }

    .metadata-header {
      @include darkest-background-texture;
      margin: 2.5rem 0 0.25rem;
      padding: .5rem .75rem;
      color: var(--lightestGrey);
      border-radius: var(--bs-border-radius);

      + .metadata-section {
        padding-top: .5rem;
      }
    }

    .metadata-section {
      display: flex;
      gap: .75rem;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
      width: 100%;
      padding: .75rem 0;

      .metadata-item {
        display: flex;
        align-items: center;
        gap: .5rem;
        position: relative;
        max-width: 100%;

        .metadata-icon {
          line-height: 0;
          height: 1rem;
          display: flex;
          align-items: center;
          justify-content: center;
          color: var(--accentColor);

          .ng-fa-icon,
          img {
            height: 1rem;
            cursor: help;
          }

          .ng-fa-icon {
            opacity: .75;
            font-size: .85rem;
            line-height: 1rem;
          }

          img {
            // Matches accent color closely without needing to generate new icons.
            filter: invert(60%) sepia(100%) saturate(1000%) hue-rotate(5deg) brightness(75%) contrast(100%);
            height: .85rem;
            vertical-align: middle;
          }

          [data-toggle="offcanvas"] {
            cursor: pointer;

            &:hover {
              color: var(--lightestGrey);
            }
          }
        }

        .metadata-label,
        .metadata-link {
          line-height: 1.15rem;
          max-width: 100%;
        }

        .metadata-label {
          color: var(--white);

          .symbol {
            color: var(--lighterGrey);
          }

          .value {
            overflow: hidden;
            text-overflow: ellipsis;
          }

          [data-toggle="tooltip"],
          [data-toggle="offcanvas"] {
            @include clickableMetadata;

            &:hover .symbol {
              color: var(--accentColor);
            }
          }
        }

        .metadata-link {
          @include clickableMetadata;

          &.search {
            cursor: url("/assets/images/search-white.png") 16 16, pointer;
          }
        }
      }
    }
  }

  position: fixed;
  top: $globalLoadingIndicatorHeight;
  left: 0;
  width: 100%;
  height: calc(100% - $globalLoadingIndicatorHeight);
  background-color: var(--black);
  display: flex;
  flex-direction: column;
  z-index: 1;
  transition: transform 0.3s ease;

  &.next {
    transform: translateX(100%);
  }

  &.previous {
    transform: translateX(-100%);
  }

  .image-loading-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .75);
    z-index: 1040;
    opacity: 0;
    transition: opacity 0.2s ease;
    pointer-events: none;

    &.loading {
      opacity: 1;
      pointer-events: auto;
    }

    @media (min-width: $lg-min) or (min-aspect-ratio: 1/1) {
      display: none;
    }
  }

  .main-area {
    display: flex;
    flex-grow: 1;
    width: 100%;
    height: 100%;
    overflow: hidden;

    .pan-container {
      transition: transform 0.3s ease;
    }

    .image-area {
      display: flex;
      flex-direction: column;
      position: relative;
      width: 60%;
      height: 100%;
      touch-action: manipulation;
      pointer-events: auto;
      background: black; // Real black as opposed to var(--black), for maximum contrast.
      transition: height 0.3s ease;

      @media (max-width: $lg-max) {
        width: 50%;
      }

      @media (max-width: $portraitLayoutBreakpoint) and (max-aspect-ratio: $maxAspectRatio) {
        width: 100%;
        max-height: calc(70vh - 3rem);
        height: unset;
        flex-direction: column;
      }

      .image-area-body {
        position: relative;
        display: flex;
        align-items: center;
        flex-grow: 1;
        height: 100%;
        max-height: inherit;
      }

      &.has-top-banner .image-area-body {
        height: calc(100% - 3rem);
      }

      .adjustment-editor {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        width: 100%;
        padding: .5rem .5rem .5rem 1rem;
        z-index: 1;
      }

      .close-button,
      .next-button,
      .previous-button,
      .revisions-mobile-button {
        position: absolute;
      }

      ::ng-deep .close-button,
      .next-button,
      .previous-button,
      ::ng-deep .additional-buttons .btn,
      .revisions-mobile-button {
        background: rgba(0, 0, 0, .5);
        border-radius: .25rem;
        border: none;
        color: var(--white);
        font-size: 1.5rem;
        cursor: pointer;
        z-index: 1031;
        opacity: 0;
        pointer-events: none;
        padding: .5rem;
        transition: opacity 0.3s, transform 0.3s ease-in-out;

        &:focus-visible {
          outline: none !important;
        }

        .ng-fa-icon {
          margin: 0;
        }

        @media (hover: hover) and (pointer: fine) {
          &:hover {
            opacity: 1 !important;
          }
        }
      }

      .next-button,
      .previous-button {
        padding: 1rem .75rem;
        border-radius: .75rem;
        z-index: 1030;

        @media (max-width: $portraitLayoutBreakpoint) and (max-aspect-ratio: $maxAspectRatio) {
          position: fixed;
          opacity: 1 !important;
          font-size: 1.5rem !important;
          border-radius: 50%;
          height: 3rem;
          width: 3rem;
          background: rgba(0, 0, 0, .5);
          padding: 0;
        }

        &:focus-visible {
          outline: none !important;
        }
      }

      .close-button {
        top: .75rem;
        left: .75rem;
      }

      .additional-buttons {
        top: .75rem;
        right: .75rem;
        display: flex;
        gap: .5rem;
        flex-wrap: nowrap;
      }

      .next-button,
      .previous-button {
        top: 50%;
        transform: translateY(-50%);
      }

      .next-button {
        right: .25rem;

        @media (hover: hover) and (pointer: fine) {
          &:hover {
            transform: translateX(0.125rem) translateY(-50%);
          }
        }
      }

      .previous-button {
        left: .25rem;

        @media (hover: hover) and (pointer: fine) {
          &:hover {
            transform: translateX(-0.125rem) translateY(-50%);
          }
        }
      }

      .revisions-mobile-button {
        bottom: .5rem;
        left: 0;
        right: 0;
        margin: 0 auto;
        width: 3rem;
        height: 3rem;
        border-radius: 50%;
        border: 1px solid var(--grey);
        font-size: 1.5rem;
        display: none;

        @media (hover: none) and (pointer: coarse) {
          pointer-events: auto;
          display: block;
          opacity: 1;
        }
      }

      ::ng-deep astrobin-image {
        .astrobin-image {
          width: auto;
          height: auto;
          max-height: 100%;
          object-fit: contain;
        }

        .video-js {
          width: 100%;
          height: 100%;
          max-width: 100%;
          max-height: 100%;
        }

        &.supports-fullscreen {
          .astrobin-image {
            cursor: zoom-in;
          }
        }
      }

      .mouse-hover-container {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        max-width: 100%;
        max-height: 100%;

        .mouse-hover {
          max-width: 100%;
          max-height: 100%;
          object-fit: contain;
          opacity: 0;
          transition: opacity 0.3s;
          cursor: zoom-in;
        }
      }

      .mouse-hover-svg-container {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;

        .mouse-hover {
          position: absolute;
          top: 0;
          left: 0;
          width: auto;
          height: auto;
          max-height: 100%;
          object-fit: contain;
          opacity: 0;
          transition: opacity 0.3s;
          cursor: zoom-in;
          // Believe it or not, this is necessary to prevent the SVG to display with a white background.
          color-scheme: none;
        }

        .mouse-hover-svg-overlay {
          position: absolute;
          bottom: .5rem;
          right: .5rem;
          background: rgba(0, 0, 0, .75);
          opacity: 0;
          transition: opacity 0.3s;
          padding: .5rem .75rem;
          font-size: .9rem;

          @media (hover: hover) and (pointer: fine) {
            &:hover {
              opacity: 1;
            }
          }
        }
      }

      @media (hover: hover) and (pointer: fine) {
        &:hover {
          .close-button,
          .next-button,
          .previous-button,
          ::ng-deep .additional-buttons .btn {
            opacity: .75;
            pointer-events: auto;
          }
        }
      }

      &.hover:not(.adjustments-editor-visible) {
        .mouse-hover.ready,
        .mouse-hover.ready + .mouse-hover-svg-overlay {
          opacity: 1 !important;
          pointer-events: auto;
        }
      }

      &.force-view-mousehover {
        @media (hover: none) and (pointer: coarse) {
          .mouse-hover.ready,
          .mouse-hover.ready + .mouse-hover-svg-overlay {
            opacity: 1 !important;
            pointer-events: auto;
          }
        }
      }

      ::ng-deep .mouse-hover {
        background: transparent !important;
      }

      // The buttons are always visible on touch devices. The revisions are handled separately and activated
      // by a button.
      @media (hover: none) and (pointer: coarse) {
        astrobin-image-viewer-revisions {
          opacity: 0;
          pointer-events: none;
          transition: opacity 0.3s;
        }

        .close-button,
        .additional-buttons {
          top: .25rem;
        }

        .close-button,
        .next-button,
        .previous-button,
        ::ng-deep .additional-buttons .btn {
          opacity: .75;
          pointer-events: auto;
          font-size: 1rem;
        }

        astrobin-image-viewer-revisions.show {
          opacity: 1;
          pointer-events: auto;
        }
      }
    }

    .data-area-container {
      position: relative;
      width: 40%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;

      .data-area {
        @include darker-background-texture;
        height: 100%;
        padding: 2rem;
        display: flex;
        flex-direction: column;
        overflow-x: hidden;

        astrobin-ad-manager {
          position: sticky;
          z-index: 1;

          @media (min-width: $lg-min) {
            margin: -2rem -2rem 2rem -2rem;
            top: -2rem;
          }

          @media (min-width: $xl-min) {
            margin-left: -3rem;
            margin-right: -3rem;
          }

          @media (max-width: $md-max) {
            margin: -1rem -1em 1rem -1rem;
            top: -1rem;
          }
        }

        ::ng-deep {
          .image-viewer-banner-component {
            @media (min-width: $lg-min) {
              + .image-viewer-banner-component {
                margin-top: 1rem;
              }
            }

            .image-viewer-banner {
              padding: .5rem 2rem;
              border-radius: 0;
              box-shadow: none;

              @media (min-width: $lg-min) {
                margin: -2rem -2rem 1rem -2rem;
              }

              @media (min-width: $xl-min) {
                margin-left: -3rem;
                margin-right: -3rem;
                padding-left: 3rem;
                padding-right: 3rem;
              }

              @media (max-width: $md-max) {
                margin: -1rem -2rem 1rem -2rem;
              }
            }
          }
        }

        .description ::ng-deep {
          display: block;
          word-break: break-word;
          overflow: hidden;
          padding: 0 .5rem;

          img {
            max-width: 100%;
            height: auto;

            &.smiley {
              height: 1rem;
            }

            &[src*="/precise_bbcode/smilies/"] {
              height: 1rem;
            }

            &.loading {
              height: 1rem;
            }

            &[data-src] {
              cursor: zoom-in;
            }
          }
        }

        astrobin-nested-comments ::ng-deep {
          .card {
            box-shadow: none;
            border: 0;
            background: transparent;

            .card-header {
              display: none;
            }

            .card-body {
              padding: 0;
            }
          }
        }

        @media (max-width: $md-max) {
          padding: 1rem .75rem;
        }

        @media (min-width: $lg-min) {
          overflow-y: auto;
        }

        @media (min-width: $xl-min) {
          padding-left: 3rem;
          padding-right: 3rem;
        }
      }

      @media (max-width: $lg-max) {
        width: 50%;
      }

      @media (max-width: $portraitLayoutBreakpoint) and (max-aspect-ratio: $maxAspectRatio) {
        width: 100%;
        height: unset;

        .data-area {
          // This makes it so the search components don't think this is the scrollable area.
          overflow-y: hidden;
        }
      }
    }

    @media (max-width: $portraitLayoutBreakpoint) and (max-aspect-ratio: $maxAspectRatio) {
      overflow-y: auto;
      flex-direction: column;
      justify-content: flex-start;
      overscroll-behavior: none;
    }
  }

  .navigation-context-wrapper {
    height: 2rem;
    overflow: hidden;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-top: 1px solid var(--grey);
    transition: height 0.3s ease;

    .scroll-left,
    .scroll-right {
      background: transparent;
      color: var(--white);
      cursor: pointer;
      font-size: 1.5rem;
      padding: 0 2rem;
      border: 0;
      border-radius: 50%;
      transition: transform 0.3s ease-in-out;

      &:focus-visible {
        outline: none !important;
      }
    }

    .scroll-left {
      @media (hover: hover) and (pointer: fine) {
        &:hover {
          transform: translateX(-.125rem);
        }
      }
    }

    .scroll-right {
      @media (hover: hover) and (pointer: fine) {
        &:hover {
          transform: translateX(.125rem);
        }
      }
    }

    .navigation-context {
      flex-grow: 1;
      height: 100%;
      overflow: hidden;
      -ms-overflow-style: none; /* IE and Edge */
      scrollbar-width: none; /* Firefox */

      &::-webkit-scrollbar {
        display: none; /* Chrome, Safari, and Opera */
      }

      .navigation-context-item {
        height: 100%;
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        padding: 0 .5rem;

        img {
          width: 80px;
          height: 80px;
          object-fit: cover;

          &:hover {
            filter: brightness(1.5);
          }
        }

        &.active {
          background: var(--grey);
        }
      }
    }

    @mixin navigation-context-wrapper-hover {
      height: 6rem;

      .scroll-left,
      .scroll-right {
        padding: 1rem 2rem;
      }

      .navigation-context {
        overflow-x: auto;
        overflow-y: hidden;

        .navigation-context-item {
          padding: 1rem 0.5rem;
        }
      }
    }

    @media (hover: hover) and (pointer: fine) {
      &:hover {
        @include navigation-context-wrapper-hover;
      }
    }

    @media (hover: none) and (pointer: coarse) {
      @include navigation-context-wrapper-hover;
    }

    @media (max-width: $md-max) {
      display: none;
    }
  }

  &.fullscreen-mode {
    top: .325rem;
    height: calc(100% - .325rem);
    z-index: 1030;

    @media (max-width: $sm-max) {
      &::ng-deep {
        astrobin-mobile-menu {
          top: unset;
          left: unset;
          right: unset;
          position: unset;
          z-index: 1031;
        }
      }
    }

    //@media (max-width: $sm-max) {
    //  // Leave room for the mobile menu
    //  top: calc(3rem + 6px);
    //  height: calc(100% - 3rem - 6px);
    //
    //  &::ng-deep {
    //    astrobin-mobile-menu {
    //      top: .325rem;
    //      z-index: 1031;
    //    }
    //  }
    //}
  }

  &:not(.fullscreen-mode) {
    @media (max-width: $sm-max) {
      // Leave room for the mobile menu
      top: calc(.3rem + 3.5rem + 3rem);
      height: calc(100vh - 108px);
    }

    @media (min-width: $lg-min) or (min-aspect-ratio: 1/1) {
      ::ng-deep {
        astrobin-image-viewer-floating-title {
          right: 1rem;
          width: calc(100% - 1rem);
        }
      }
    }
  }
}

::ng-deep {
  .image-viewer-share-offcanvas {
    &:not(.offcanvas-bottom) {
      width: 40% !important;
    }
  }
}
